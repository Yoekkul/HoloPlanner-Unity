//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.GridMap
{
    [Serializable]
    public class GridMapMsg : Message
    {
        public const string k_RosMessageName = "grid_map_msgs/GridMap";
        public override string RosMessageName => k_RosMessageName;

        //  Grid map header
        public GridMapInfoMsg info;
        //  Grid map layer names.
        public string[] layers;
        //  Grid map basic layer names (optional). The basic layers
        //  determine which layers from `layers` need to be valid
        //  in order for a cell of the grid map to be valid.
        public string[] basic_layers;
        //  Grid map data.
        public Std.Float32MultiArrayMsg[] data;
        //  Row start index (default 0).
        public ushort outer_start_index;
        //  Column start index (default 0).
        public ushort inner_start_index;

        public GridMapMsg()
        {
            this.info = new GridMapInfoMsg();
            this.layers = new string[0];
            this.basic_layers = new string[0];
            this.data = new Std.Float32MultiArrayMsg[0];
            this.outer_start_index = 0;
            this.inner_start_index = 0;
        }

        public GridMapMsg(GridMapInfoMsg info, string[] layers, string[] basic_layers, Std.Float32MultiArrayMsg[] data, ushort outer_start_index, ushort inner_start_index)
        {
            this.info = info;
            this.layers = layers;
            this.basic_layers = basic_layers;
            this.data = data;
            this.outer_start_index = outer_start_index;
            this.inner_start_index = inner_start_index;
        }

        public static GridMapMsg Deserialize(MessageDeserializer deserializer) => new GridMapMsg(deserializer);

        private GridMapMsg(MessageDeserializer deserializer)
        {
            this.info = GridMapInfoMsg.Deserialize(deserializer);
            deserializer.Read(out this.layers, deserializer.ReadLength());
            deserializer.Read(out this.basic_layers, deserializer.ReadLength());
            deserializer.Read(out this.data, Std.Float32MultiArrayMsg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.outer_start_index);
            deserializer.Read(out this.inner_start_index);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.info);
            serializer.WriteLength(this.layers);
            serializer.Write(this.layers);
            serializer.WriteLength(this.basic_layers);
            serializer.Write(this.basic_layers);
            serializer.WriteLength(this.data);
            serializer.Write(this.data);
            serializer.Write(this.outer_start_index);
            serializer.Write(this.inner_start_index);
        }

        public override string ToString()
        {
            return "GridMapMsg: " +
            "\ninfo: " + info.ToString() +
            "\nlayers: " + System.String.Join(", ", layers.ToList()) +
            "\nbasic_layers: " + System.String.Join(", ", basic_layers.ToList()) +
            "\ndata: " + System.String.Join(", ", data.ToList()) +
            "\nouter_start_index: " + outer_start_index.ToString() +
            "\ninner_start_index: " + inner_start_index.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
